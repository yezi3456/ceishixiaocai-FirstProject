1.addresslist模拟接口
package com.example.demo;

import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.Cookie;

import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import net.sf.json.JSONObject;

@RestController
public class AddressList {
		@RequestMapping(value="/fgadmin/address/list",method=RequestMethod.GET)//要求登录前提下
	   public JSONObject addresslist(@RequestParam String address) {
		   Cookie cookie= new Cookie("login","true");
		   JSONObject result = new JSONObject();
		   if(address.equals("")) {
			   result.put("message","收货地址为空");
			   result.put("code","201");
			   return result;
		   }else {
			   result.put("id","77479641");
			   result.put("searchParamList","[]");
			   result.put("sort","99");
			   result.put("province","浙江省");
			   result.put("city","杭州市");
			   result.put("receiverName","张三");
			   result.put("cellPhone","12345678901");
			   result.put("addressDetail","浙江大学");
			   result.put("fgUserId","74966314");
			   result.put( "id","74966314");
			   result.put( "searchParamList","[ ]");
			   result.put( "phoneArea","86");
			   result.put( "phoneNumber","20000000000");
			   result.put( "createTime","1454057846653");
			   result.put( "userAccount","86/20000000000");
			   result.put( "userName","测试用户20");
			   result.put( "platform","0");
			   result.put( "next1","0");
			   result.put( "next2","0");
			   result.put( "createTimeStr","2016-01-29 16:57:26");
			   result.put("platformDescribe","手机" );
			   String fguser=result.toString();
			   result.put("fgUser",fguser);
			   String res= address.toString();
			   result.put("message","success");
			   result.put("result",res);
			   result.put("code","200");
		       return result;
		   }
		   
	   }
}
2.测试用例
python
from  SendHttp.HttpDriver import SendHttp
import unittest

from SendHttp.Common import getcookies
class Address_List_Test(unittest.TestCase):
    def setUp(self):
        self.url="/fgadmin/address/list"

    def test_skulist_success(self):
        user = {"phoneArea": "86", "phoneNumber": "20000000000", "password": "netease123"}
        cookies=getcookies(user)
        resp = SendHttp().send_http(self.url, "GET", paramdata={'address':"1"},cookies=cookies)
        print(resp)
        self.assertEqual(resp["code"], '200')

    def test_skulist_fail(self):
        user = {"phoneArea": "86", "phoneNumber": "20000000000", "password": "netease123"}
        cookies = getcookies(user)
        resp = SendHttp().send_http(self.url, "GET", paramdata={'address':""},cookies=cookies)
        print(resp)
        self.assertEqual(resp["code"], '201')

    if __name__ == '__main__':
        unittest.main()


Java

public class AddressTest extends BaseTest{
	Checker check = null;
	public void address() throws Exception {
		String url=ReadPro.getPropValue("BaseUrl")+ReadPro.getPropValue("address")+"?address=1";
		CookieStore cookie = Common.getLoginCookie();
		String content=HttpDriver.doGet(url,cookie);
		System.out.println(content);
		check = new Checker(content);
	}
	@Test
	public void getAddress() throws Exception {
		address();
		check.verifyXpath("code", "200");
	}

}
2.login模拟接口
package com.example.demo;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import net.sf.json.JSONObject;

@RestController
public class Login {
    public static Cookie cookie;
	@RequestMapping(value="/common/fgadmin/login",method=RequestMethod.POST,produces="application/json;charset=UTF-8")
	public JSONObject getByJSON(@RequestBody JSONObject jsonParam,HttpServletResponse response) {
		String phoneArea = jsonParam.getString("phoneArea");
		String phoneNumber = jsonParam.getString("phoneNumber");
		String password = jsonParam.getString("password");
		JSONObject result = new JSONObject();
		if(phoneArea.equals("86") && phoneNumber.equals("20000000000") && password.equals("netease123")) {
			cookie = new Cookie("login","true");
			response.addCookie(cookie);
			result.element("msg","success");
		}
		else {
			result.element("msg", "fail");
		}
		return result;
	}

}
测试用例
import org.testng.annotations.Test;

import com.api.core.BaseTest;
import com.api.core.HttpDriver;
import com.api.utils.Checker;
import com.api.utils.ReadPro;

import net.sf.json.JSONObject;

public class LoginTest extends BaseTest{
	Checker check=null;
	public void login(String phoneArea,String phoneNumber,String password) throws Exception {
		String url = ReadPro.getPropValue("BaseUrl")+ReadPro.getPropValue("login");
		JSONObject json = new JSONObject();
		json.element("phoneArea", phoneArea);
		json.element("phoneNumber", phoneNumber);
		json.element("password", password);
		String content = HttpDriver.doPost(url, json);
		System.out.println(content);
		check = new Checker(content);
	}

	@Test(priority=0)
	public void login1() throws Exception {
		login("86","20000000000","netease123");
		check.verifyXpath("msg", "success");
	}
	@Test(priority=1)
	public void login2() throws Exception {
		login("86","20000000000","netease23");
		check.verifyXpath("msg", "fail");
	}
}

2.基于场景的测试用例
package ch0917;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import javax.xml.crypto.dsig.keyinfo.KeyInfo;

import org.apache.http.client.CookieStore;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import ch0911.HttpDriver;
import ch0911.Settings;
import ch0911.cookiedemo;
import net.sf.json.JSON;
import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

public class ChangjingTest {
	String address_list_url = "/fgadmin/address/list";
	String fee_url = "/common/getTransportFee";
	String submit_url="/fgadmin/orders/submit";
	String addressnew_url="/fgadmin/address/new";
	@DataProvider(name="user")
	public Object[][] getData(){
		return new Object[][] {{"86","2000000000","netease123"}};
	}
	@Test(dataProvider="user")
	public void testChangjing1(String a,String user,String pwd) throws Exception {
//		1、登录（可省略）
		CookieStore cookie =cookiedemo.getCookie(a,user,pwd);

		JSONObject jsonObject=new JSONObject();
		jsonObject.element("id", "");
		jsonObject.element("receiverName","Xiaoli");
		jsonObject.element("cellPhone", "13200000000");
		jsonObject.element("province","浙江省");
		jsonObject.element("city", "杭州市");
		jsonObject.element("area","滨江区");
		jsonObject.element("addressDetail", "1");
		String addressnew_result = HttpDriver.doPost(Settings.base_url+addressnew_url,jsonObject,cookie);
	

		String province ="浙江省";
		String city = "杭州市";
		String area = "滨江区";
		String receiverName ="Xiaoli";
		String cellPhone = "13200000000";
		String addressDetail = "1";

		// 3、获取运费?id=1&=浙江省_杭州市_滨江区
		Map<String, Object> fee_para=new HashMap<String, Object>();
		fee_para.put("id", "1");
		fee_para.put("addressDetail",province+"_"+city+"_"+area);
		String fee_result=HttpDriver.doGet(fee_url, fee_para,cookie);
		System.out.println(fee_result);
//		4、Submit

		JSONObject jsonObject1=new JSONObject();
		jsonObject1.element("accessDevice", "0");
		jsonObject1.element("accessSource", "noSource");
		jsonObject1.element("addressDetail", addressDetail);
		jsonObject1.element("area", area);
		jsonObject1.element("cellPhone", cellPhone);
		jsonObject1.element("city", city);
		jsonObject1.element("invoiceHead", "");
		jsonObject1.element("logisticsCompanyId", "1");
		jsonObject1.element("needInvoice", "0");
		jsonObject1.element("province",province);
		jsonObject1.element("receiverName", receiverName);
		jsonObject1.element("skuIds", "2,3");
		jsonObject1.element("skuNumbers", "1,1");
		jsonObject1.element("stockIds", "74966312,74966313");
		jsonObject1.element("transportFee", "0");
		jsonObject1.element("voiceStatus","0");
		String dingdan_result = HttpDriver.doPost(Settings.base_url+submit_url,cookie,jsonObject1.toString());
		

		System.out.println(dingdan_result);
	
		
	}

}

