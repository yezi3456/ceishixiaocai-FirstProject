package com.webtest.ui;

import static org.testng.Assert.assertFalse;
import static org.testng.Assert.assertTrue;

import org.testng.annotations.Test;

import com.webtest.core.BaseTest;

public class NewGoodsEdit extends BaseTest{
		
	@Test(priority=1,description="25 在售商品页面编辑商品名称(成功用例)")
	//25 在售商品页面编辑商品名称(成功用例)
	public void editNameSuccess() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[1]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.click("xpath=//*[@id=\"maingrid|2|r1001|c113\"]/div/div/a[2]");
		webtest.type("xpath=//*[@id=\"goodsName\"]", "test001");
		webtest.click("xpath=//*[@id=\"wst-tab-1\"]/table/tbody/tr[16]/td/button[1]");
		assertTrue(webtest.isTextPresent("test01"));
		webtest.leaveFrame();
	}
	
	@Test(priority=2,description="26 在售商品页面编辑商品名称(失败用例:商品名称为空格)")
	//26 在售商品页面编辑商品名称(失败用例:商品名称为空格)
	public void editNameFail1() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[1]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.click("xpath=//*[@id=\"maingrid|2|r1001|c113\"]/div/div/a[2]");
		webtest.type("xpath=//*[@id=\"goodsName\"]", "   ");
		assertTrue(webtest.isTextPresent("商品名称不能为空"));
		webtest.leaveFrame();
	}
	
	
	
	
	
	@Test(priority=5,description=" 29在售商品页面编辑商品编号(成功用例)")
	// 29在售商品页面编辑商品编号(成功用例)
	public void editIDSuccess() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[1]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.click("xpath=//*[@id=\"maingrid|2|r1001|c113\"]/div/div/a[2]");
		webtest.type("xpath=//*[@id=\"goodsSn\"]", "00000012");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-tab-1\"]/table/tbody/tr[16]/td/button[1]");
		assertTrue(webtest.isTextPresent("00000012"));
		webtest.leaveFrame();
	}

	
	
	@Test(priority=9,description="33在售商品页面编辑商品编号(失败用例:商品编号为空)")
	// 33在售商品页面编辑商品编号(失败用例:商品编号为空)
	public void editIDFail4() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[1]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.click("xpath=//*[@id=\"maingrid|2|r1001|c113\"]/div/div/a[2]");
		webtest.type("xpath=//*[@id=\"goodsSn\"]", "     ");
		assertTrue(webtest.isTextPresent("商品编号不能为空"));
		webtest.leaveFrame();
	}
	
	
	@Test(priority=10,description="34在售商品页面编辑商品货号(成功用例)")
	// 34在售商品页面编辑商品货号(成功用例)
	public void editNumberSuccess() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[1]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.click("xpath=//*[@id=\"maingrid|2|r1001|c113\"]/div/div/a[2]");
		webtest.type("xpath=//*[@id=\"productNo\"]", "123456789101"
				+ "");
		webtest.click("xpath=//*[@id=\"wst-tab-1\"]/table/tbody/tr[16]/td/button[1]");
		webtest.click("xpath=//*[@id=\"maingrid|2|r1001|c113\"]/div/div/a[2]");
		assertTrue(webtest.isTextPresent("00000012"));
		webtest.leaveFrame();
	}
	
	
	
	@Test(priority=11,description="35在售商品页面编辑市场价格(成功用例)")
	//35在售商品页面编辑市场价格(成功用例)
	public void editMarketPriceSuccess() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[1]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.click("xpath=//*[@id=\"maingrid|2|r1001|c113\"]/div/div/a[2]");
		webtest.type("xpath=//*[@id=\"marketPrice\"]", "888.88");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-tab-1\"]/table/tbody/tr[16]/td/button[1]");
		webtest.click("xpath=//*[@id=\"maingrid|2|r1001|c113\"]/div/div/a[2]");
		assertTrue(webtest.isTextPresent("888.88"));
		webtest.leaveFrame();
	}
	
	@Test(priority=12,description="36在售商品页面编辑市场价格(失败用例: 价格为0)")
	//36在售商品页面编辑市场价格(失败用例: 价格为0)
	public void editMarketPriceFail1() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[1]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.click("xpath=//*[@id=\"maingrid|2|r1001|c113\"]/div/div/a[2]");
		webtest.type("xpath=//*[@id=\"marketPrice\"]", "0");
		Thread.sleep(2000);
		assertTrue(webtest.isTextPresent("价格必须大于0"));
		webtest.leaveFrame();
	}
	
	@Test(priority=13,description="37在售商品页面编辑市场价格(失败用例:输入特殊字符)")
	//37在售商品页面编辑市场价格(失败用例:输入特殊字符)
	public void editMarketPriceFail2() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[1]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.click("xpath=//*[@id=\"maingrid|2|r1001|c113\"]/div/div/a[2]");
		webtest.type("xpath=//*[@id=\"marketPrice\"]", "!");
		Thread.sleep(2000);
		assertTrue(webtest.isTextPresent("价格必须大于0"));
		webtest.leaveFrame();
	}
	
	@Test(priority=14,description="38在售商品页面编辑市场价格(失败用例:输入负数)")
	//38在售商品页面编辑市场价格(失败用例:输入负数)
	public void editMarketPriceFail3() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[1]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.click("xpath=//*[@id=\"maingrid|2|r1001|c113\"]/div/div/a[2]");
		webtest.type("xpath=//*[@id=\"marketPrice\"]", "-2");
		Thread.sleep(2000);
		assertTrue(webtest.isTextPresent("价格必须大于0"));
		webtest.leaveFrame();
	}
	
	@Test(priority=15,description="39在售商品页面编辑市场价格(失败用例:输入空白)")
	//39在售商品页面编辑市场价格(失败用例:输入空白)
	public void editMarketPriceFail4() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[1]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.click("xpath=//*[@id=\"maingrid|2|r1001|c113\"]/div/div/a[2]");
		webtest.type("xpath=//*[@id=\"marketPrice\"]", "    ");
		Thread.sleep(2000);
		assertTrue(webtest.isTextPresent("市场价格不能为空"));
		webtest.leaveFrame();
	}
	
		
	
	@Test(priority=16,description="40在售商品页面编辑商品库存(成功用例)")
	// 40在售商品页面编辑商品库存(成功用例)
	public void editGoodsInventorySuccess() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[1]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.click("xpath=//*[@id=\"maingrid|2|r1001|c113\"]/div/div/a[2]");
		webtest.type("xpath=//*[@id=\"goodsStock\"]", "777");
		webtest.click("xpath=//*[@id=\"wst-tab-1\"]/table/tbody/tr[16]/td/button[1]");
		assertTrue(webtest.isTextPresent("777"));
		webtest.leaveFrame();
	}

	
	@Test(priority=17,description="41在售商品页面编辑商品库存(失败用例:输入负数)")
	// 41在售商品页面编辑商品库存(失败用例:输入负数)
	public void editGoodsInventoryFail1() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[1]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.click("xpath=//*[@id=\"maingrid|2|r1001|c113\"]/div/div/a[2]");
		webtest.type("xpath=//*[@id=\"goodsStock\"]", "-2");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"shopPrice\"]");
		assertTrue(webtest.isTextPresent("请填写正整数"));
		webtest.leaveFrame();
	}

	
	@Test(priority=18,description="42在售商品页面编辑商品库存(失败用例:输入字符)")
	// 42在售商品页面编辑商品库存(失败用例:输入字符)
	public void editGoodsInventoryFail2() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[1]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.click("xpath=//*[@id=\"maingrid|2|r1001|c113\"]/div/div/a[2]");
		webtest.type("xpath=//*[@id=\"goodsStock\"]", "!");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"shopPrice\"]");
		assertTrue(webtest.isTextPresent("请填写正整数"));
		webtest.leaveFrame();
	}
	
	@Test(priority=19,description="43在售商品页面编辑商品库存(失败用例:输入为空)")
	// 43在售商品页面编辑商品库存(失败用例:输入为空)
	public void editGoodsInventoryFail3() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[1]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.click("xpath=//*[@id=\"maingrid|2|r1001|c113\"]/div/div/a[2]");
		webtest.type("xpath=//*[@id=\"goodsStock\"]", "     ");
		Thread.sleep(2000);
		assertTrue(webtest.isTextPresent("商品库存不能为空"));
		webtest.leaveFrame();
	}
	
	@Test(priority=20,description="44在售商品页面编辑预警库存(成功用例)")
	// 44在售商品页面编辑预警库存(成功用例)
	public void editWarnInventorySuccess() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[1]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.click("xpath=//*[@id=\"maingrid|2|r1001|c113\"]/div/div/a[2]");
		webtest.type("xpath=//*[@id=\"warnStock\"]", "10");
		webtest.click("xpath=//*[@id=\"wst-tab-1\"]/table/tbody/tr[16]/td/button[1]");
		assertTrue(webtest.isTextPresent("10"));
		webtest.leaveFrame();
	}
	
	
	
	@Test(priority=21,description="45在售商品页面编辑商品单位(成功用例)")
	// 45在售商品页面编辑商品单位(成功用例)
	public void editGoodsUnitSuccess() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[1]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.click("xpath=//*[@id=\"maingrid|2|r1001|c113\"]/div/div/a[2]");
		webtest.type("xpath=//*[@id=\"goodsUnit\"]", "件");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-tab-1\"]/table/tbody/tr[16]/td/button[1]");
		webtest.click("xpath=//*[@id=\"maingrid|2|r1001|c113\"]/div/div/a[2]");
		assertTrue(webtest.isTextPresent("件"));
		webtest.leaveFrame();
	}
	
	@Test(priority=22,description="46在售商品页面编辑商品单位(失败用例:商品单位为空)")
	// 46在售商品页面编辑商品单位(失败用例:商品单位为空)
	public void editGoodsUnitFail1() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[1]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.click("xpath=//*[@id=\"maingrid|2|r1001|c113\"]/div/div/a[2]");
		webtest.type("xpath=//*[@id=\"goodsUnit\"]", "     ");
		Thread.sleep(2000);
		assertTrue(webtest.isTextPresent("商品单位不能为空"));
		webtest.leaveFrame();
	}
	
	

	@Test(priority=25,description="49修改商品状态")
	// 49修改商品状态
	public void editGoodsStatus() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[1]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.click("xpath=//*[@id=\"maingrid|2|r1001|c113\"]/div/div/a[2]");
		webtest.click("xpath=//*[@id=\"isSale-0\"]");
		webtest.click("xpath=//*[@id=\"wst-tab-1\"]/table/tbody/tr[16]/td/button[1]");
		assertTrue(webtest.isTextPresent("下架"));
		webtest.leaveFrame();
	}
	
	@Test(priority=26,description="50修改商品属性")
	// 50修改商品属性
	public void editGoodsAttribute() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[1]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.click("xpath=//*[@id=\"maingrid|2|r1001|c113\"]/div/div/a[2]");
		webtest.click("xpath=//*[@id=\"isRecom\"]");
		webtest.click("xpath=//*[@id=\"wst-tab-1\"]/table/tbody/tr[16]/td/button[1]");
		assertTrue(webtest.isTextPresent("推荐"));
		webtest.leaveFrame();
	}
	

	@Test(priority=27,description="51修改本店分类(成功用例)")
	// 51修改本店分类(成功用例)
	public void editGoodsCatSuccess() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[1]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.click("xpath=//*[@id=\"maingrid|2|r1001|c113\"]/div/div/a[2]");
		webtest.selectByValue("id=cat_0", "50");
		Thread.sleep(2000);
		webtest.selectByValue("id=cat_0_50", "219");
		Thread.sleep(2000);
		webtest.selectByValue("id=cat_0_50_219", "225");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-tab-1\"]/table/tbody/tr[16]/td/button[1]");
		assertTrue(webtest.isTextPresent("推荐"));
		webtest.leaveFrame();
	}


}
package com.webtest.ui;

import static org.testng.Assert.assertTrue;

import org.testng.annotations.Test;

import com.webtest.core.BaseTest;

public class StockWarning extends BaseTest{
	
	@Test(priority=1,description="54库存预警查询商品")
	//54库存预警查询商品
	public void searchGoods() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[5]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.type("xpath=//*[@id=\"goodsName\"]", "密封保鲜盒六件套冰箱收纳盒塑料长方形微波炉饭盒");
		webtest.click("xpath=/html/body/div[1]/button");
		assertTrue(webtest.isTextPresent("密封保鲜盒六件套冰箱收纳盒塑料长方形微波炉饭盒"));
		webtest.leaveFrame();
	}
	
	@Test(priority=2,description="55库存预警查看商品详情")
	//55库存预警查看商品详情
	public void seeGoods() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[5]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.click("xpath=//*[@id=\"maingrid|2|r1001|c107\"]/div/div/a");
		assertTrue(webtest.isTextPresent("国标一级 稻园牌稻米油粮油米糠油绿色植物油食用油5L 三大健康油"));
		webtest.leaveFrame();
	}
	
	
}
package com.webtest.ui;

import static org.testng.Assert.assertTrue;

import org.testng.annotations.Test;

import com.webtest.core.BaseTest;

public class GoodsClassification extends BaseTest{

	@Test(priority=1,description="56成功修改商品推荐")
	//56修改商品推荐
	public void editRecommend() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[6]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.click("xpath=//*[@id=\"f_377\"]");
		assertTrue(webtest.isTextPresent("不推荐"));
		webtest.leaveFrame();
	}

	@Test(priority=2,description="57成功修改商品展示隐藏")
	//57修改商品展示隐藏
	public void editShow() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[6]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.click("xpath=//*[@id=\"sh_377\"]");
		assertTrue(webtest.isTextPresent("显示"));
		webtest.leaveFrame();
	}
	@Test(priority=3,description="60查询商品属性(成功用例:输入空白)")
	//60查询商品属性(成功用例:输入空白)
	public void editRecommendFail2() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[7]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.type("xpath=//*[@id=\"keyName\"]", "           ");
		webtest.click("xpath=/html/body/div[1]/div[1]/button");
		assertTrue(webtest.isTextPresent("网络类型"));
		assertTrue(webtest.isTextPresent("营养元素"));
		assertTrue(webtest.isTextPresent("保鲜期"));
		assertTrue(webtest.isTextPresent("手机类型"));
		assertTrue(webtest.isTextPresent("操作系统"));
		webtest.leaveFrame();
	}
	

}
package com.webtest.ui;

import static org.testng.Assert.assertTrue;

import org.testng.annotations.Test;

import com.webtest.core.BaseTest;

public class BrandManagment extends BaseTest{

	@Test(priority=1,description="61成功查询品牌名称")
	//61查询品牌名称(成功用例)
	public void searchBrandSuccess() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[8]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.type("xpath=//*[@id=\"key\"]", "志高");
		webtest.click("xpath=/html/body/div[1]/button[1]");
		assertTrue(webtest.isTextPresent("1"));
		webtest.leaveFrame();
	}
	

	@Test(priority=4,description="64修改品牌名称(成功用例)")
	//64修改品牌名称(成功用例)
	public void editBrandNameSuccess() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[8]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.click("xpath=//*[@id=\"maingrid|2|r1007|c105\"]/div/a[1]");
		webtest.type("xpath=//*[@id=\"brandName\"]", "test01");
		webtest.click("xpath=//*[@id=\"brandForm\"]/table/tbody/tr[6]/td/button[1]");
		assertTrue(webtest.isTextPresent("test01"));
		webtest.leaveFrame();
	}
	

	@Test(priority=5,description="65修改品牌名称(失败用例:输入空白)")
	//65修改品牌名称(失败用例:输入空白)
	public void editBrandNameFail1() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[8]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.click("xpath=//*[@id=\"maingrid|2|r1007|c105\"]/div/a[1]");
		webtest.type("xpath=//*[@id=\"brandName\"]", "       ");
		webtest.click("xpath=//*[@id=\"brandForm\"]/table/tbody/tr[6]/td/button[1]");
		assertTrue(webtest.isTextPresent("品牌名称不能为空"));
		webtest.leaveFrame();
	}
	

	
	@Test(priority=7,description="67下拉列表查询(成功用例)")
	//67下拉列表查询(成功用例)
	public void selectSearch() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[8]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.selectByValue("id=catId", "47");
		webtest.click("xpath=/html/body/div[1]/button[1]");
		assertTrue(webtest.isTextPresent("烟雨农夫"));
		webtest.leaveFrame();
	}


}
package com.webtest.ui;

import org.testng.annotations.Test;

import com.webtest.core.BaseTest;
import com.webtest.dataprovider.NSDataProvider;

public class SearchMethod extends BaseTest{
	
	@Test(dataProvider="excel",dataProviderClass=NSDataProvider.class)
	public void searchMethod(String id) throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[1]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.type("xpath=//*[@id=\"goodsName\"]", id);
		webtest.click("xpath=/html/body/div[1]/button");
	}
}
package com.webtest.ui;

import static org.testng.Assert.assertTrue;

import org.testng.annotations.Test;

import com.webtest.core.BaseTest;
import com.webtest.core.BaseTestFail;

public class ErrorSet extends BaseTestFail{
	
	
	@Test(priority=1,description="27 在售商品页面编辑商品名称(失败用例:商品名称为特殊字符)")
	//27 在售商品页面编辑商品名称(失败用例:商品名称为特殊字符)
	public void editNameFail2() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[1]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.click("xpath=//*[@id=\"maingrid|2|r1001|c113\"]/div/div/a[2]");
		webtest.type("xpath=//*[@id=\"goodsName\"]", "!");
		assertTrue(webtest.isTextPresent("请输入正确商品名称"));
		webtest.leaveFrame();
	}
	

	@Test(priority=2,description="28 在售商品页面编辑商品名称(失败用例:商品名称太长)")
	//28 在售商品页面编辑商品名称(失败用例:商品名称太长)
	public void editNameFail3() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[1]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.click("xpath=//*[@id=\"maingrid|2|r1001|c113\"]/div/div/a[2]");
		webtest.type("xpath=//*[@id=\"goodsName\"]", "商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品商品");
		assertTrue(webtest.isTextPresent("商品名称过长!"));
		webtest.leaveFrame();
	}
	

	@Test(priority=3,description="30在售商品页面编辑商品编号(失败用例:商品编号为特殊字符)")
	// 30在售商品页面编辑商品编号(失败用例:商品编号为特殊字符)
	public void editIDFail1() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[1]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.click("xpath=//*[@id=\"maingrid|2|r1001|c113\"]/div/div/a[2]");
		webtest.type("xpath=//*[@id=\"goodsSn\"]", "!");
		Thread.sleep(2000);
		assertTrue(webtest.isTextPresent("请输入正确的商品编号"));
		webtest.leaveFrame();
	}


	@Test(priority=4,description="31在售商品页面编辑商品编号(失败用例:商品编号过长)")
	// 31在售商品页面编辑商品编号(失败用例:商品编号过长)
	public void editIDFail2() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[1]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.click("xpath=//*[@id=\"maingrid|2|r1001|c113\"]/div/div/a[2]");
		webtest.type("xpath=//*[@id=\"goodsSn\"]", "0000001000000100000010000001000000100000010000001000000100000010000001");
		Thread.sleep(2000);
		assertTrue(webtest.isTextPresent("请输入正确的商品编号"));
		webtest.leaveFrame();
	}

	
	@Test(priority=5,description="32在售商品页面编辑商品编号(失败用例:商品编号过短)")
	// 32在售商品页面编辑商品编号(失败用例:商品编号过短)
	public void editIDFail3() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[1]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.click("xpath=//*[@id=\"maingrid|2|r1001|c113\"]/div/div/a[2]");
		webtest.type("xpath=//*[@id=\"goodsSn\"]", "1");
		Thread.sleep(2000);
		assertTrue(webtest.isTextPresent("请输入正确的商品编号"));
		webtest.leaveFrame();
	}


	@Test(priority=6,description="47在售商品页面编辑商品单位(失败用例:商品单位为特殊字符)")
	// 47在售商品页面编辑商品单位(失败用例:商品单位为特殊字符)
	public void editGoodsUnitFail2() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[1]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.click("xpath=//*[@id=\"maingrid|2|r1001|c113\"]/div/div/a[2]");
		webtest.type("xpath=//*[@id=\"goodsUnit\"]", "!!");
		Thread.sleep(2000);
		assertTrue(webtest.isTextPresent("请输入正确商品单位"));
		webtest.leaveFrame();
	}
	

	@Test(priority=7,description="48在售商品页面编辑商品单位(失败用例:商品单位为数字)")
	// 48在售商品页面编辑商品单位(失败用例:商品单位为数字)
	public void editGoodsUnitFail3() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[1]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.click("xpath=//*[@id=\"maingrid|2|r1001|c113\"]/div/div/a[2]");
		webtest.type("xpath=//*[@id=\"goodsUnit\"]", "123");
		Thread.sleep(2000);
		assertTrue(webtest.isTextPresent("请输入正确商品单位"));
		webtest.leaveFrame();
	}
	

	@Test(priority=8,description="59查询商品属性(失败用例:输入特殊字符)")
	//59查询商品属性(失败用例:输入特殊字符)
	public void editRecommendFail1() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[7]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.type("xpath=//*[@id=\"keyName\"]", "!!!!!");
		webtest.click("xpath=/html/body/div[1]/div[1]/button");
		assertTrue(webtest.isTextPresent("请输入正确的商品属性名称"));
	}
	

	@Test(priority=9,description="58查询商品属性(成功用例)")
	//58查询商品属性(成功用例)
	public void editRecommendSuccess() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[7]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.type("xpath=//*[@id=\"keyName\"]", "尺寸");
		webtest.click("xpath=/html/body/div[1]/div[1]/button");
		assertTrue(webtest.isTextPresent("下拉框"));
		webtest.leaveFrame();
	}
	

	@Test(priority=10,description="66查询品牌名称(失败用例:输入特殊字符)")
	//66查询品牌名称(失败用例:输入特殊字符)
	public void editBrandNameFail2() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[8]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.click("xpath=//*[@id=\"maingrid|2|r1007|c105\"]/div/a[1]");
		webtest.type("xpath=//*[@id=\"brandName\"]", "test01");
		webtest.click("xpath=//*[@id=\"brandForm\"]/table/tbody/tr[6]/td/button[1]");
		assertTrue(webtest.isTextPresent("品牌名称不能为特殊字符"));
		webtest.leaveFrame();
	}
	

	@Test(priority=11,description="62失败查询品牌名称,输入特殊字符")
	//62查询品牌名称(失败用例:输入特殊字符)
	public void searchBrandFail1() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[8]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.type("xpath=//*[@id=\"key\"]", "!");
		webtest.click("xpath=/html/body/div[1]/button[1]");
		assertTrue(webtest.isTextPresent("请输入正确的品牌名称"));
		webtest.leaveFrame();
	}
	

	@Test(priority=12,description="63失败查询品牌名称,输入空白")
	//63查询品牌名称(失败用例:输入空白)
	public void searchBrandFail2() throws Exception{
		webtest.click("xpath=//*[@id=\"wst-tabs\"]/div[1]/ul/li[4]/a");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"wst-accordion-22\"]/div[2]/a[8]");
		Thread.sleep(2000);
		webtest.enterFrame("wst-lframe-22");
		webtest.type("xpath=//*[@id=\"key\"]", "      ");
		webtest.click("xpath=/html/body/div[1]/button[1]");
		assertTrue(webtest.isTextPresent("品牌名称不能为空"));
		webtest.leaveFrame();
	}
	

	

	
}
package com.webtest.core;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Properties;


import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.testng.annotations.AfterSuite;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeSuite;


import com.webtest.utils.Log;
import com.webtest.utils.ReadProperties;

/**
 * author:lihuanzhen
 * 初始化浏览器
 */


public class BaseTestFail {

	public  WebDriverEngine webtest;
	private WebDriver driver;
	public String driverType;

	
	

	private WebDriver newWebDriver(String driverType) throws IOException {
		WebDriver driver = null;
	 if (driverType.equalsIgnoreCase("firefox")) {
		    String firefox_driver =ReadProperties.getPropertyValue("gecko_driver");
			String firefox_path = ReadProperties.getPropertyValue("firefox_path");
			System.setProperty("webdriver.gecko.driver", firefox_driver);
			System.setProperty("webdriver.firefox.bin", firefox_path);
			driver = new FirefoxDriver();
	
			Log.info("Using Firefox");
		}  else if (driverType.equalsIgnoreCase("chrome")) {
			String chrome_path = ReadProperties.getPropertyValue("chrome_path");
			System.setProperty("webdriver.chrome.driver",chrome_path);
			driver = new ChromeDriver();
			Log.info("Using Chrome");
			
		}else{
			return null;
		}

		
		return driver;

	
	}


	/**
	 * 
	 *初始化浏览器
	 * 
	 */


	@BeforeMethod
	public void doBeforeClass() throws Exception {

		driverType=ReadProperties.getPropertyValue("driverType");
		driver = this.newWebDriver(driverType);
		driver.manage().window().maximize();
		Log.info(driverType);
		webtest = new WebDriverEngine(driver);
		webtest.open("http://localhost:9999/wstshop3/admin/index/login.html");
		webtest.type("id=loginPwd","123456");
		webtest.click("xpath=//input[@value='登录']");
		Thread.sleep(2000);
	
	
	}


//	@AfterSuite
//	public void doAfterMethod() {
//		if(this.driver != null){
//			this.driver.quit();
//			}
//		Log.info("Quitted Browser");
//	}
//	

	

	
	public WebDriver getDriver() {
        return driver;
    }


	

}
