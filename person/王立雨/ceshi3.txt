1.登录
package movie;
import static org.testng.Assert.assertTrue;

import java.io.IOException;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import com.webtest.core.BaseTest;
import com.webtest.core.WebDriverEngine;
import com.webtest.dataprovider.ExcelDataProvider;
import com.webtest.dataprovider.NSDataProvider;
import com.webtest.dataprovider.TxtDataProvider;
import com.webtest.utils.Log;
import com.webtest.utils.ReadProperties;

public class Login{
	
	public  WebDriverEngine webtest;
	private WebDriver driver;
	public String driverType;

	
	

	private WebDriver newWebDriver(String driverType) throws IOException {
		WebDriver driver = null;
	 if (driverType.equalsIgnoreCase("firefox")) {
		    String firefox_driver =ReadProperties.getPropertyValue("gecko_driver");
			String firefox_path = ReadProperties.getPropertyValue("firefox_path");
			System.setProperty("webdriver.gecko.driver", firefox_driver);
			System.setProperty("webdriver.firefox.bin", firefox_path);
			driver = new FirefoxDriver();
	
			Log.info("Using Firefox");
		}  else if (driverType.equalsIgnoreCase("chrome")) {
			String chrome_path = ReadProperties.getPropertyValue("chrome_path");
			System.setProperty("webdriver.chrome.driver",chrome_path);
			driver = new ChromeDriver();
			Log.info("Using Chrome");
			
		}else{
			return null;
		}

		
		return driver;

	
	}


	/**
	 * 
	 *初始化浏览器
	 * 
	 */


	@BeforeClass
	public void doBeforeClass() throws Exception {

		driverType=ReadProperties.getPropertyValue("driverType");
		driver = this.newWebDriver(driverType);
		driver.manage().window().maximize();
		Log.info(driverType);
		webtest = new WebDriverEngine(driver);
		webtest.open("http://localhost/wstshop/admin/index/login.html");
	
	}
	//01第一次登录，密码123456，成功         02第二次登录，密码12345，失败
	@Test(dataProvider="excel",dataProviderClass=NSDataProvider.class)
	public void login2(String password) throws Exception {
		if(webtest.isTextPresent("退出系统")) {
			Thread.sleep(3000);
			webtest.click("link=退出系统");
			Thread.sleep(3000);
			webtest.click("xpath=/html/body/div[7]/div[3]/a[1]");	
		}		
		webtest.type("id=loginPwd",password);
		Thread.sleep(3000);
		webtest.click("xpath=/html/body/div/div/form/table/tbody/tr[4]/td[2]/div/input");
		Thread.sleep(3000);
		assertTrue(webtest.isTextPresent("退出系统"));
	
	}
	
}

2.会员等级
package movie;

import static org.testng.Assert.assertFalse;
import static org.testng.Assert.assertTrue;

import org.testng.annotations.Test;
import com.webtest.core.BaseTest;
import com.webtest.dataprovider.TxtDataProvider;
public class HuiyuangdengjiTest extends BaseTest{

	

	@Test(priority=1,description="03删除会员")
	public void test1() throws Exception{
		Thread.sleep(3000);
//		webtest.click("xpath=*[@id=\"wst-accordion-1\"]/div[3]/div[2]");
		webtest.click("xpath=/html/body/div[2]/div[2]/div[1]/div/div[1]/div[2]/div[3]/div[2]");
		webtest.click("link=会员等级");
		webtest.enterFrame("wst-lframe-1");
		Thread.sleep(3000);
		webtest.click("link=删除");
		Thread.sleep(2000);
		webtest.click("xpath=/html/body/div[4]/div[3]/a[1]");
		Thread.sleep(2000);
		assertTrue(webtest.isTextPresent("折扣率"));
	}

	
	@Test(priority=2,description="05修改会员")
	public void test3() throws Exception{
		Thread.sleep(3000);
		webtest.click("link=修改");
		Thread.sleep(2000);
		webtest.typeAndClear("id=rankName","");
		Thread.sleep(2000);
		webtest.type("id=rankName","VIP");
		Thread.sleep(2000);
		webtest.click("xpath=/html/body/form/table/tbody/tr[7]/td/input[2]");
		Thread.sleep(2000);
		assertTrue(webtest.isTextPresent("VIP"));
	}
	
	@Test(priority=3,description="04新增会员fail(不上传图标)")
	public void test2() throws Exception{
		Thread.sleep(3000);
		webtest.click("xpath=/html/body/div[1]/button");
		Thread.sleep(2000);
		webtest.type("id=rankName","VIP");
		Thread.sleep(2000);
		webtest.type("id=startScore","100");
		Thread.sleep(2000);
		webtest.type("id=endScore","1000");
		Thread.sleep(2000);
		webtest.type("id=rebate","10");
		Thread.sleep(2000);
		webtest.click("xpath=/html/body/form/table/tbody/tr[7]/td/input[2]");
		Thread.sleep(2000);
		assertTrue(webtest.isTextPresent("预览图"));

	}
	
	
	@Test(priority=4,description="47修改会员-积分上限小于积分下限fail")
	public void test4() throws Exception{
		Thread.sleep(3000);
		webtest.click("xpath=//*[@id=\"userRankForm\"]/table/tbody/tr[7]/td/input[3]");
		Thread.sleep(3000);
		webtest.click("link=修改");
		Thread.sleep(2000);
		webtest.typeAndClear("id=startScore","");
		Thread.sleep(2000);
		webtest.typeAndClear("id=endScore","");
		Thread.sleep(2000);
		webtest.type("id=startScore","1000000");
		Thread.sleep(2000);
		webtest.type("id=endScore","100");
		Thread.sleep(2000);	
		webtest.click("xpath=/html/body/form/table/tbody/tr[7]/td/input[2]");
		Thread.sleep(2000);
		assertTrue(webtest.isTextPresent("预览图"));
	}
	
	@Test(priority=5,description="48修改会员-积分上限为字符fail")
	public void test5() throws Exception{
		Thread.sleep(3000);
		webtest.click("link=会员等级");
		Thread.sleep(3000);
		webtest.click("link=修改");
		Thread.sleep(2000);
		webtest.typeAndClear("id=startScore","");
		Thread.sleep(2000);
		webtest.type("id=startScore","aaa");
		Thread.sleep(2000);
		webtest.click("xpath=/html/body/form/table/tbody/tr[7]/td/input[2]");
		Thread.sleep(2000);
		assertTrue(webtest.isTextPresent("预览图"));
	}
	
	@Test(priority=6,description="49修改会员-折扣率为1000，不提交")
	public void test6() throws Exception{
		Thread.sleep(3000);
		webtest.click("link=会员等级");
		Thread.sleep(3000);
		webtest.click("link=修改");
		Thread.sleep(2000);
		webtest.typeAndClear("id=startScore","");
		webtest.typeAndClear("id=endScore","");
		webtest.typeAndClear("id=rebate","");
		Thread.sleep(2000);
		webtest.type("id=startScore","10");
		webtest.type("id=endScore","100");
		webtest.type("id=rebate","10000");
		Thread.sleep(2000);
		assertFalse(webtest.isTextPresent("10000"));
	}
	
	@Test(priority=7,description="50刷新按钮")
	public void test7() throws Exception{
		Thread.sleep(3000);
		webtest.click("xpath=//*[@id=\"userRankForm\"]/table/tbody/tr[7]/td/input[3]");
		Thread.sleep(3000);
		webtest.click("xpath=//*[@id=\"maingrid\"]/div[5]/div/div[10]/div/span");
		Thread.sleep(2000);
		
	}
	
	

}
3.会员管理

package movie;

import static org.testng.Assert.assertFalse;
import static org.testng.Assert.assertTrue;

import org.testng.annotations.Test;

import com.webtest.core.BaseTest;

public class HuiyuanguanliTest extends BaseTest {


	
	@Test(priority=1,description="07修改账号success")
	public void test3() throws Exception{
		Thread.sleep(3000);
		webtest.click("xpath=/html/body/div[2]/div[2]/div[1]/div/div[1]/div[2]/div[3]/div[2]");
		webtest.click("link=会员管理");
		webtest.enterFrame("wst-lframe-1");
		Thread.sleep(3000);
		webtest.click("link=修改");
		Thread.sleep(2000);
		webtest.typeAndClear("id=userName","");
		webtest.typeAndClear("id=userPhone","");
		webtest.typeAndClear("id=userEmail","");
		webtest.typeAndClear("id=userQQ","");
		Thread.sleep(2000);
		webtest.type("id=userName","VIP");
		Thread.sleep(2000);
		webtest.type("id=userPhone","15232239098");
		webtest.type("id=userEmail","256@qq.com");
		webtest.type("id=userQQ","29105789");		
		webtest.click("xpath=/html/body/form/table/tbody/tr[9]/td/input[2]");
		Thread.sleep(2000);
		assertTrue(webtest.isTextPresent("VIP"));
	}
	
	@Test(priority=2,description="06删除账号")
	public void test1() throws Exception {
		Thread.sleep(3000);
		webtest.click("link=删除");
		Thread.sleep(2000);
		webtest.click("xpath=/html/body/div[4]/div[3]/a[1]");
		Thread.sleep(2000);
	}
	
	@Test(priority=3,description="08修改账号（不写用户名）fail")
	public void test4() throws Exception{
		
		Thread.sleep(3000);
		webtest.click("link=修改");
		Thread.sleep(2000);
		webtest.typeAndClear("id=userName","");
		webtest.typeAndClear("id=userPhone","");
		webtest.typeAndClear("id=userEmail","");
		webtest.typeAndClear("id=userQQ","");
		Thread.sleep(2000);
		webtest.type("id=userPhone","13455676587");
		Thread.sleep(2000);
		webtest.type("id=userEmail","286609@qq.com");
		Thread.sleep(2000);
		webtest.type("id=userQQ","29197447");	
		Thread.sleep(2000);
		webtest.click("xpath=/html/body/form/table/tbody/tr[9]/td/input[2]");
		Thread.sleep(2000);
		assertTrue(webtest.isTextPresent("性别"));
	}
	
	@Test(priority=4,description="09修改账号（不输入手机号码）fail")
	public void test5() throws Exception{
		Thread.sleep(3000);
		webtest.click("xpath=//*[@id=\"userForm\"]/table/tbody/tr[9]/td/input[3]");
		Thread.sleep(3000);
		webtest.click("link=修改");
		Thread.sleep(2000);
		webtest.typeAndClear("id=userName","");
		webtest.typeAndClear("id=userPhone","");
		webtest.typeAndClear("id=userEmail","");
		webtest.typeAndClear("id=userQQ","");
		webtest.type("id=userName","VIPP");
		Thread.sleep(2000);
//		webtest.type("id=userPhone","12345678900");
		webtest.type("id=userEmail","27566@qq.com");
		Thread.sleep(2000);
		webtest.type("id=userQQ","2911765");	
		Thread.sleep(2000);
		webtest.click("xpath=/html/body/form/table/tbody/tr[7]/td/input[2]");
		Thread.sleep(2000);
		assertTrue(webtest.isTextPresent("VIPP"));
	}
	
	
	@Test(priority=5,description="10修改账号（不输入邮箱）fail")
	public void test6() throws Exception{
		Thread.sleep(3000);
		webtest.click("xpath=//*[@id=\"userForm\"]/table/tbody/tr[9]/td/input[3]");
		Thread.sleep(3000);
		webtest.click("link=修改");
		Thread.sleep(2000);
		webtest.typeAndClear("id=userName","");
		webtest.typeAndClear("id=userPhone","");
		webtest.typeAndClear("id=userEmail","");
		webtest.typeAndClear("id=userQQ","");
		Thread.sleep(2000);
		webtest.type("id=userName","VIPPP");
		Thread.sleep(2000);
		webtest.type("id=userPhone","15231120909");
		Thread.sleep(2000);
//		webtest.type("id=userEmail","23@qq.com");
		webtest.type("id=userQQ","235610");
		Thread.sleep(2000);
		webtest.click("xpath=*[@id=\"userRankForm\"]/table/tbody/tr[7]/td/input[2]");
		Thread.sleep(2000);
		assertTrue(webtest.isTextPresent("VIPPP"));
	}
	
	@Test(priority=6,description="11修改账号（不输入会员积分）fail")
	public void test7() throws Exception{
		Thread.sleep(3000);
		webtest.click("xpath=//*[@id=\"userForm\"]/table/tbody/tr[9]/td/input[3]");
		Thread.sleep(3000);
		webtest.click("link=修改");
		Thread.sleep(2000);
		webtest.typeAndClear("id=userName","");
		webtest.typeAndClear("id=userPhone","");
		webtest.typeAndClear("id=userEmail","");
		webtest.typeAndClear("id=userQQ","");
		webtest.typeAndClear("id=userScore","");
		Thread.sleep(2000);
		webtest.type("id=userName","VIPPPP");
		Thread.sleep(2000);
		webtest.type("id=userPhone","15232435676");
		Thread.sleep(2000);
		webtest.type("id=userEmail","29097@qq.com");
		Thread.sleep(2000);
		webtest.type("id=userQQ","2894");	
		Thread.sleep(2000);
		webtest.click("xpath=*[@id=\"userRankForm\"]/table/tbody/tr[7]/td/input[2]");
		Thread.sleep(2000);
		assertTrue(webtest.isTextPresent("VIPPPP"));
	}
	
	@Test(priority=7,description="41查询-只输入账号名success")
	public void test8() throws Exception{
		Thread.sleep(3000);
		webtest.click("xpath=//*[@id=\"userForm\"]/table/tbody/tr[9]/td/input[3]");
		Thread.sleep(2000);
		webtest.type("id=loginName1", "maysh2009");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"query\"]/input[4]");
		Thread.sleep(2000);
		assertTrue(webtest.isTextPresent("maysh2009"));
	}
	
	@Test(priority=8,description="42查询-只输入电话号码success")
	public void test9() throws Exception{
		Thread.sleep(2000);
		webtest.typeAndClear("id=loginName1", "");
		Thread.sleep(2000);
		webtest.type("id=loginPhone", "13172912018");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"query\"]/input[4]");
		Thread.sleep(2000);
		assertTrue(webtest.isTextPresent("13172912018"));
	}
	
	@Test(priority=9,description="43查询-只输入邮箱success")
	public void test10() throws Exception{
		Thread.sleep(2000);
		webtest.typeAndClear("id=loginPhone", "");
		Thread.sleep(2000);
		webtest.type("id=loginEmail", "232@sd.com");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"query\"]/input[4]");
		Thread.sleep(2000);
		assertTrue(webtest.isTextPresent("232@sd.com"));
	}
	
	@Test(priority=10,description="44查询-只输入错误的邮箱fail")
	public void test11() throws Exception{
		Thread.sleep(2000);
		webtest.typeAndClear("id=loginEmail", "");
		Thread.sleep(2000);
		webtest.type("id=loginEmail", "232@sdcom");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"query\"]/input[4]");
		Thread.sleep(2000);
		assertFalse(webtest.isTextPresent("232@sdcom"));
		
	}
	
	@Test(priority=11,description="45查询-只输入账号名的一部分success")
	public void test12() throws Exception{
		Thread.sleep(2000);
		webtest.typeAndClear("id=loginEmail", "");
		Thread.sleep(2000);
		webtest.type("id=loginName1", "vvv");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"query\"]/input[4]");
		Thread.sleep(2000);
		assertTrue(webtest.isTextPresent("vvv"));
		
	}
	
	@Test(priority=12,description="46查询-只输入手机号的一部分success")
	public void test13() throws Exception{
		Thread.sleep(2000);
		webtest.typeAndClear("id=loginName1", "");
		Thread.sleep(2000);
		webtest.type("id=loginPhone", "138");
		Thread.sleep(2000);
		webtest.click("xpath=//*[@id=\"query\"]/input[4]");
		Thread.sleep(2000);
		assertTrue(webtest.isTextPresent("138"));
		
	}
	
	
	
	
	
}
4.账号管理
package movie;

import static org.testng.Assert.assertTrue;

import org.testng.annotations.Test;

import com.webtest.core.BaseTest;
public class ZhanghaoguanliTest extends BaseTest {
	
	@Test(priority=3,description="12重置支付密码")
	public void Test1() throws InterruptedException{
		Thread.sleep(3000);
		webtest.click("xpath=/html/body/div[2]/div[2]/div[1]/div/div[1]/div[2]/div[3]/div[2]");
		webtest.click("link=账号管理");
		webtest.enterFrame("wst-lframe-1");
		Thread.sleep(3000);
		webtest.click("link=重置支付密码");
		webtest.click("xpath=/html/body/div[5]/div[3]/a[1]");
		assertTrue(webtest.isTextPresent("账号"));
	}
	
	
	
	@Test(priority=4,description="14修改2")
	public void Test3() throws InterruptedException{
		Thread.sleep(3000);
		webtest.click("link=修改");
		Thread.sleep(1000);
		webtest.typeAndClear("id=loginName","");
		Thread.sleep(1000);
		webtest.type("id=loginName","tom089");
		Thread.sleep(1000);
		webtest.type("id=loginPwd","123456");
		Thread.sleep(1000);
		webtest.click("xpath=/html/body/div[3]/div[3]/a[1]");
		Thread.sleep(3000);
		assertTrue(webtest.isTextPresent("tom000"));
	}
	
	@Test(priority=5,description="13修改(不填密码)")
	public void Test2() throws InterruptedException{
		Thread.sleep(3000);
		webtest.click("link=修改");
		Thread.sleep(1000);
		webtest.typeAndClear("id=loginName","");
		Thread.sleep(1000);
		webtest.type("id=loginName","tom099");
		Thread.sleep(1000);
		webtest.click("xpath=/html/body/div[3]/div[3]/a[1]");
		Thread.sleep(3000);
		assertTrue(webtest.isTextPresent("tom000"));
	}
	
	@Test(priority=6,description="15修改(不填用户名)")
	public void Test4() throws InterruptedException{
		Thread.sleep(3000);
		webtest.click("link=修改");
		Thread.sleep(1000);
		webtest.typeAndClear("id=loginName","");
		Thread.sleep(1000);
		webtest.type("id=loginPwd","123456");
		Thread.sleep(1000);
		webtest.click("xpath=/html/body/div[3]/div[3]/a[1]");
		Thread.sleep(3000);
		assertTrue(webtest.isTextPresent("手机号码"));
	}

}
5.文章分类
package movie;

import static org.testng.Assert.assertTrue;

import org.testng.annotations.Test;

import com.webtest.core.BaseTest;

public class WenzhangfenleiTest extends BaseTest {
	
	@Test(priority=1,description="30新增分类success")
	public void test1() throws Exception{
		Thread.sleep(3000);
		webtest.click("xpath=//*[@id=\"wst-accordion-1\"]/div[5]/div[2]");
		webtest.click("link=文章分类");
		webtest.enterFrame("wst-lframe-1");
		Thread.sleep(3000);
		webtest.click("xpath=/html/body/div[1]/button");
		Thread.sleep(3000);
		webtest.type("id=catName","帮助");
		Thread.sleep(3000);
		webtest.click("xpath=//*[@id=\"layui-layer1\"]/div[3]/a[1]");
		Thread.sleep(5000);
		assertTrue(webtest.isTextPresent("普通类型"));	
	}
	
	@Test(priority=2,description="31新增子分类success")
	public void test2() throws Exception{
		Thread.sleep(3000);
		webtest.click("link=新增子分类");
		Thread.sleep(3000);
		webtest.type("id=catName","帮助success");
		Thread.sleep(3000);
		webtest.click("xpath=/html/body/div[3]/div[3]/a[1]");
		Thread.sleep(5000);
		assertTrue(webtest.isTextPresent("普通类型"));	
	}
	
	@Test(priority=3,description="32新增子分类fail(不添加分类名称)")
	public void test3() throws Exception{
		Thread.sleep(3000);
		
		webtest.click("link=新增子分类");
		Thread.sleep(3000);
		webtest.click("xpath=/html/body/div[3]/div[3]/a[1]");
		Thread.sleep(1000);
		assertTrue(webtest.isTextPresent("分类名称不能为空"));	
	}
	
	@Test(priority=4,description="33新增子分类fail，不填排序号")
	public void test4() throws Exception{
		Thread.sleep(3000);
		webtest.click("xpath=/html/body/div[3]/div[3]/a[2]");
		Thread.sleep(3000);
		webtest.click("link=新增子分类");
		Thread.sleep(3000);
		webtest.type("id=catName","帮助哈哈嗯嗯");
		Thread.sleep(3000);
		webtest.typeAndClear("id=catSort","");
		Thread.sleep(3000);
		webtest.click("xpath=/html/body/div[3]/div[3]/a[1]");
		Thread.sleep(3000);
		assertTrue(webtest.isTextPresent("排序号不能为空"));	
	}
	
	@Test(priority=5,description="34新增子分类fail，排序号为非数字")
	public void test5() throws Exception{
		Thread.sleep(1000);
		webtest.click("xpath=/html/body/div[3]/div[3]/a[2]");
		Thread.sleep(3000);
		webtest.click("link=新增子分类");
		Thread.sleep(3000);
		webtest.type("id=catName","帮助哈哈嗯嗯");
		Thread.sleep(3000);
		webtest.typeAndClear("id=catSort","");
		Thread.sleep(3000);
		webtest.type("id=catSor","aaa");
		Thread.sleep(3000);
		webtest.click("xpath=/html/body/div[3]/div[3]/a[1]");
		Thread.sleep(3000);
		assertTrue(webtest.isTextPresent("新增文章分类"));	
	}
	
	@Test(priority=6,description="35删除")
	public void test6() throws Exception{
		Thread.sleep(1000);
		webtest.click("xpath=/html/body/div[3]/div[3]/a[2]");
		Thread.sleep(3000);
		webtest.click("link=删除");
		Thread.sleep(3000);
		webtest.click("xpath=/html/body/div[5]/div[3]/a[1]");
		Thread.sleep(3000);
		assertTrue(webtest.isTextPresent("商城快讯"));	
	}
	
	@Test(priority=7,description="36修改success")
	public void test7() throws Exception{
		Thread.sleep(3000);
		webtest.click("link=修改");
		Thread.sleep(3000);
		webtest.typeAndClear("id=catName","");
		Thread.sleep(3000);
		webtest.type("id=catName","中心");
		Thread.sleep(3000);
		webtest.click("xpath=/html/body/div[3]/div[3]/a[1]");	
		Thread.sleep(3000);
		assertTrue(webtest.isTextPresent("商城快讯"));	
	}
	
	
}
6.文章管理
package movie;

import static org.testng.Assert.assertTrue;

import org.testng.annotations.Test;

import com.webtest.core.BaseTest;

public class WenzhangguanliTest extends BaseTest {
	
	@Test(priority=1,description="25新增文章fail(不选择分类类型)")
	public void test1() throws Exception{
		Thread.sleep(3000);
		webtest.click("xpath=/html/body/div[2]/div[2]/div[1]/div/div[1]/div[2]/div[5]/div[2]");
		webtest.click("link=文章管理");
		webtest.enterFrame("wst-lframe-1");
		Thread.sleep(3000);
		webtest.click("xpath=/html/body/div[1]/button[3]");
		Thread.sleep(3000);
		webtest.type("id=articleTitle","帮助");
		Thread.sleep(1000);
		webtest.type("id=articleKey","帮助");
		Thread.sleep(1000);
		webtest.type("xpath=/html/body/form/table/tbody/tr[5]/td/div/div[2]/iframe","帮助帮助帮助帮助帮助帮助帮助帮助帮助");	
		Thread.sleep(1000);
		webtest.click("xpath=/html/body/form/table/tbody/tr[6]/td/button[1]");
		assertTrue(webtest.isTextPresent("文章分类不能为空"));
		
		
	}
	

	@Test(priority=2,description="26删除文章")
	public void test2() throws Exception{	
		Thread.sleep(3000);
		webtest.click("xpath=/html/body/form/table/tbody/tr[6]/td/button[2]");		
		Thread.sleep(3000);
		webtest.click("link=删除");
		Thread.sleep(2000);
		webtest.click("xpath=/html/body/div[4]/div[3]/a[1]");
		Thread.sleep(2000);
		assertTrue(webtest.isTextPresent("标题"));
	}
	
	@Test(priority=3,description="27修改文章(修改标题)")
	public void test3() throws Exception{	
		Thread.sleep(3000);
		webtest.click("xpath=/html/body/form/table/tbody/tr[6]/td/button[2]");		
		Thread.sleep(3000);
		webtest.click("link=修改");
		Thread.sleep(2000);
		webtest.typeAndClear("id=articleTitle","");
		Thread.sleep(2000);
		webtest.type("id=articleTitle", "修改修改");
		webtest.click("xpath=/html/body/form/table/tbody/tr[6]/td/button[1]");
		Thread.sleep(2000);
		assertTrue(webtest.isTextPresent("发票制度"));
	}
	
	@Test(priority=4,description="28修改文章fail(修改成重复的标题)")
	public void test4() throws Exception{	
		Thread.sleep(3000);
		webtest.click("xpath=/html/body/form/table/tbody/tr[6]/td/button[2]");
		Thread.sleep(3000);
		webtest.click("link=修改");
		Thread.sleep(2000);
		webtest.typeAndClear("id=articleTitle","");
		Thread.sleep(2000);
		webtest.type("id=articleTitle", "公司转账");
		webtest.click("xpath=//*[@id=\"articleForm\"]/table/tbody/tr[6]/td/button[1]");
		Thread.sleep(2000);
		assertTrue(webtest.isTextPresent("返回"));
	}
	
	@Test(priority=5,description="29批量删除文章")
	public void test5() throws Exception{	
		Thread.sleep(3000);
		webtest.click("xpath=/html/body/form/table/tbody/tr[6]/td/button[2]");			
		Thread.sleep(2000);
		webtest.click("xpath=/html/body/div[2]/div[4]/div/div/div[4]/div[2]/div/table/tbody/tr[1]/td[1]/div/input");
		Thread.sleep(2000);
		webtest.click("xpath=/html/body/div[1]/button[2]");
		Thread.sleep(2000);
		webtest.click("xpath=/html/body/div[4]/div[3]/a[1]");
		Thread.sleep(2000);
		assertTrue(webtest.isTextPresent("标题"));
	}
	
	
}
7.首页
package movie;
import static org.testng.Assert.assertTrue;

import org.testng.annotations.Test;

import com.webtest.core.BaseTest;

public class ShouyeTest extends BaseTest {
	@Test(description="37点击网点首页")
	public void test() throws InterruptedException{
		Thread.sleep(3000);
		webtest.click("xpath=//*[@id=\"topmenu\"]/div[2]/a[1]");
		Thread.sleep(6000);
		assertTrue(webtest.isTextPresent("WSTShop"));	
		
	}

}
8.服务支持
package movie;
import static org.testng.Assert.assertTrue;

import org.testng.annotations.Test;

import com.webtest.core.BaseTest;
public class FuwuTest extends BaseTest {
	@Test(description="38点击服务支持")
	public void test() throws InterruptedException{
		Thread.sleep(3000);
		webtest.click("xpath=//*[@id=\"topmenu\"]/div[2]/a[2]");
		Thread.sleep(6000);
		assertTrue(webtest.isTextPresent("首页"));	
		
	}

}
9.修改密码
package movie;

import static org.testng.Assert.assertTrue;

import org.testng.annotations.Test;

import com.webtest.core.BaseTest;

public class ChangePwd extends BaseTest {

	@Test(priority=1,description="16修改密码success")
	public void changepwd() throws Exception{
		Thread.sleep(3000);
		webtest.click("link=修改密码");
		Thread.sleep(3000);
		webtest.type("id=srcPass","123456");
		Thread.sleep(3000);
		webtest.type("id=newPass","123456");
		Thread.sleep(3000);
		webtest.type("id=newPass2","123456");
		Thread.sleep(3000);
		webtest.click("xpath=/html/body/div[3]/div[3]/a[1]");	
		Thread.sleep(3000);
		assertTrue(webtest.isTextPresent("修改密码"));
	}
	
	
	@Test(priority=2,description="17修改密码fail(确认密码与新密码不一致)")
	public void changepwd2() throws Exception{
		
		Thread.sleep(3000);
		webtest.click("link=修改密码");
		webtest.typeAndClear("id=srcPass","");
		webtest.typeAndClear("id=newPass","");
		webtest.typeAndClear("id=newPass2","");
		Thread.sleep(3000);
		webtest.type("id=srcPass","123456");
		Thread.sleep(3000);
		webtest.type("id=newPass","123456");
		Thread.sleep(3000);
		webtest.type("id=newPass2","12345");
		Thread.sleep(3000);
		webtest.click("xpath=/html/body/div[3]/div[3]/a[1]");	
		Thread.sleep(3000);
		assertTrue(webtest.isTextPresent("确认密码与新密码不一致"));
	}
	
	
	@Test(priority=3,description="18修改密码fail(确认密码为空)")
	public void changepwd3() throws Exception{
		Thread.sleep(3000);
		webtest.click("xpath=/html/body/div[3]/div[3]/a[2]");	
		Thread.sleep(3000);
		webtest.click("link=修改密码");
		webtest.typeAndClear("id=srcPass","");
		webtest.typeAndClear("id=newPass","");
		webtest.typeAndClear("id=newPass2","");
		Thread.sleep(3000);
		webtest.type("id=srcPass","123456");
		Thread.sleep(3000);
		webtest.type("id=newPass","123456");
		Thread.sleep(3000);
//		webtest.type("id=newPass2","12345");
//		Thread.sleep(3000);
		webtest.click("xpath=/html/body/div[3]/div[3]/a[1]");	
		Thread.sleep(3000);
		assertTrue(webtest.isTextPresent("确认密码不能为空"));
	}
	
	@Test(priority=4,description="19修改密码fail(新密码为空)")
	public void changepwd4() throws Exception{
		Thread.sleep(3000);
		webtest.click("xpath=/html/body/div[3]/div[3]/a[2]");	
		Thread.sleep(3000);
		webtest.click("link=修改密码");
		webtest.typeAndClear("id=srcPass","");
		webtest.typeAndClear("id=newPass","");
		webtest.typeAndClear("id=newPass2","");
		Thread.sleep(3000);
		webtest.type("id=srcPass","123456");
		Thread.sleep(3000);
//		webtest.type("id=newPass","123456");
//		Thread.sleep(3000);
		webtest.type("id=newPass2","123456");
		Thread.sleep(3000);
		webtest.click("xpath=/html/body/div[3]/div[3]/a[1]");	
		Thread.sleep(3000);
		assertTrue(webtest.isTextPresent("新密码不能为空"));
	}
	
	@Test(priority=5,description="20修改密码fail(原密码为空)")
	public void changepwd5() throws Exception{
		Thread.sleep(3000);
		webtest.click("xpath=/html/body/div[3]/div[3]/a[2]");	
		Thread.sleep(3000);
		webtest.click("link=修改密码");
		webtest.typeAndClear("id=srcPass","");
		webtest.typeAndClear("id=newPass","");
		webtest.typeAndClear("id=newPass2","");
//		Thread.sleep(3000);
//		webtest.type("id=srcPass","123456");
		Thread.sleep(3000);
		webtest.type("id=newPass","123456");
		Thread.sleep(3000);
		webtest.type("id=newPass2","123456");
		Thread.sleep(3000);
		webtest.click("xpath=/html/body/div[3]/div[3]/a[1]");	
		Thread.sleep(3000);
		assertTrue(webtest.isTextPresent("原密码不能为空"));
	}
	
	@Test(priority=6,description="21修改密码fail(原密码错误)")
	public void changepwd6() throws Exception{
		Thread.sleep(3000);
		webtest.click("xpath=/html/body/div[3]/div[3]/a[2]");	
		Thread.sleep(3000);
		webtest.click("link=修改密码");
		webtest.typeAndClear("id=srcPass","");
		webtest.typeAndClear("id=newPass","");
		webtest.typeAndClear("id=newPass2","");
		Thread.sleep(3000);
		webtest.type("id=srcPass","123457");
		Thread.sleep(3000);
		webtest.type("id=newPass","123456");
		Thread.sleep(3000);
		webtest.type("id=newPass2","123456");
		Thread.sleep(3000);
		webtest.click("xpath=/html/body/div[3]/div[3]/a[1]");	
		Thread.sleep(3000);
		assertTrue(webtest.isTextPresent("原密码"));
	}
	
	@Test(priority=7,description="22修改密码fail(新密码5位)")
	public void changepwd7() throws Exception{
		Thread.sleep(3000);
		webtest.click("xpath=/html/body/div[3]/div[3]/a[2]");	
		Thread.sleep(3000);
		webtest.click("link=修改密码");
		webtest.typeAndClear("id=srcPass","");
		webtest.typeAndClear("id=newPass","");
		webtest.typeAndClear("id=newPass2","");
		Thread.sleep(3000);
		webtest.type("id=srcPass","123456");
		Thread.sleep(3000);
		webtest.type("id=newPass","12345");
		Thread.sleep(3000);
		webtest.type("id=newPass2","12345");
		Thread.sleep(3000);
		webtest.click("xpath=/html/body/div[3]/div[3]/a[1]");	
		Thread.sleep(2000);
		assertTrue(webtest.isTextPresent("原密码"));
	}
	
	@Test(priority=8,description="23修改密码success(新密码为7位)")
	public void changepwd8() throws Exception{
		Thread.sleep(3000);
		webtest.click("xpath=/html/body/div[3]/div[3]/a[2]");	
		Thread.sleep(3000);
		webtest.click("link=修改密码");
		webtest.typeAndClear("id=srcPass","");
		webtest.typeAndClear("id=newPass","");
		webtest.typeAndClear("id=newPass2","");
		Thread.sleep(3000);
		webtest.type("id=srcPass","123456");
		Thread.sleep(3000);
		webtest.type("id=newPass","1234567");
		Thread.sleep(3000);
		webtest.type("id=newPass2","1234567");
		Thread.sleep(3000);
		webtest.click("xpath=/html/body/div[3]/div[3]/a[1]");	
		Thread.sleep(2000);
		assertTrue(webtest.isTextPresent("修改密码"));
	}
	
	@Test(priority=9,description="24修改密码(新密码为20位)")
	public void changepwd9() throws Exception{
//		Thread.sleep(3000);
//		webtest.click("xpath=/html/body/div[3]/div[3]/a[2]");	
		Thread.sleep(3000);
		webtest.click("link=修改密码");
		webtest.typeAndClear("id=srcPass","");
		webtest.typeAndClear("id=newPass","");
		webtest.typeAndClear("id=newPass2","");
		Thread.sleep(3000);
		webtest.type("id=srcPass","1234567");
		Thread.sleep(3000);
		webtest.type("id=newPass","12345670000000000000");
		Thread.sleep(3000);
		webtest.type("id=newPass2","12345670000000000000");
		Thread.sleep(3000);
		webtest.click("xpath=/html/body/div[3]/div[3]/a[1]");	
		Thread.sleep(3000);
		assertTrue(webtest.isTextPresent("修改密码"));
	}
	

}
10.清除缓存和退出系统
package movie;

import static org.testng.Assert.assertTrue;

import org.testng.annotations.Test;

import com.webtest.core.BaseTest;

public class Out extends BaseTest {
	
	@Test(priority=1,description="39清除缓存success")
	public void clear() throws Exception{
		Thread.sleep(3000);
		webtest.click("xpath=//*[@id=\"topmenu\"]/div[2]/a[3]");
		Thread.sleep(1000);
		assertTrue(webtest.isTextPresent("清除缓存"));
			
		
	}
	
	@Test(priority=2,description="40退出系统success")
	public void output() throws Exception{
		Thread.sleep(3000);
		webtest.click("link=退出系统");
		Thread.sleep(1000);
		webtest.click("xpath=/html/body/div[7]/div[3]/a[1]");	
		assertTrue(webtest.isTextPresent("WSTShop后台管理系统"));
		
	}
	


}











